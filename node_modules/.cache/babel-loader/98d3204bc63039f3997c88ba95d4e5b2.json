{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Win11 Pro\\\\Desktop\\\\NPM\\\\Tetris-Game-Deployment-Automation\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\Win11 Pro\\\\Desktop\\\\NPM\\\\Tetris-Game-Deployment-Automation\\\\src\\\\components\\\\Game\\\\index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDrag } from \"react-use-gesture\";\nimport BarLoader from \"react-spinners/BarLoader\";\nimport Stage from \"../Stage\";\nimport { useInterval } from \"../../hooks/useInterval\";\nimport Center from \"../Center\";\nimport { PrintPlayerInMap } from \"../../utils/Utils\";\n\n//TODO: Alterar OnClick (rotatePlayer) para OnFastClick (criar hook)\n//TODO: Organização do componente \"Game\" (Separar codigo em hooks, outros components e funcoes)\n//TODO: Dar um tempo quando o bloco estiver no chão, mas o usuário mexendo\n\nconst STAGE_HEIGHT = 18;\nconst STAGE_WIDTH = 10;\nconst initialMap = [...new Array(STAGE_HEIGHT)].map(() => [...new Array(STAGE_WIDTH)].map(() => ({\n  fill: 0,\n  color: []\n})));\nconst colors = [\"#e54b4b\", \"#9a031e\", \"#fcdc4d\", \"#005397\", \"#0bbcd6\", \"#20ad65\", \"#f8ebee\"];\nconst I = {\n  bloco: [[0, 0, 0, 0], [1, 1, 1, 1], [0, 0, 0, 0], [0, 0, 0, 0]]\n};\nconst O = {\n  bloco: [[1, 1], [1, 1]]\n};\nconst T = {\n  bloco: [[0, 0, 0], [1, 1, 1], [0, 1, 0]]\n};\nconst J = {\n  bloco: [[0, 1, 0], [0, 1, 0], [1, 1, 0]]\n};\nconst L = {\n  bloco: [[0, 1, 0], [0, 1, 0], [0, 1, 1]]\n};\nconst S = {\n  bloco: [[0, 1, 1], [1, 1, 0], [0, 0, 0]]\n};\nconst Z = {\n  bloco: [[1, 1, 0], [0, 1, 1], [0, 0, 0]]\n};\nconst getRandomBloco = () => {\n  const blocos = [I, O, T, J, L, S, Z];\n  const bloco = blocos[Math.floor(Math.random() * blocos.length)];\n  bloco.color = colors[Math.floor(Math.random() * colors.length)];\n  return bloco;\n};\nconst getRandomPlayer = player => {\n  let bloco, next;\n  if (player) if (player.next) {\n    bloco = JSON.parse(JSON.stringify(player.next));\n    next = getRandomBloco();\n  }\n  if (!bloco) bloco = getRandomBloco();\n  if (!next) next = getRandomBloco();\n  const pos = [0, Math.floor(STAGE_WIDTH / 2 - 2 / 2)];\n  return {\n    pos,\n    bloco,\n    next\n  };\n};\nconst Game = () => {\n  const [map, setMap] = useState(initialMap);\n  const [player, setPlayer] = useState();\n  const [down, setDown] = useState(false);\n  const [pause, setPause] = useState(false);\n  const [tick, setTick] = useState(Date.now());\n  const [hintPlayer, setHintPlayer] = useState();\n  const [spaceReleased, setSpaceReleased] = useState(true);\n  const [lines, setlines] = useState(0);\n  const [score, setScore] = useState(0);\n  const [level, setLevel] = useState(1);\n  const [dragX, setDragX] = useState(0);\n  const [dragY, setDragY] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  useEffect(() => {\n    const levelBaseScore = 1000;\n    const nextLevel = level + 1;\n    const nextLevelScore = levelBaseScore * nextLevel * nextLevel * nextLevel / 5;\n    console.log(\"Current level: \", level);\n    console.log(\"Score to next level:\", nextLevelScore);\n    console.log(\"Remaining: \", nextLevelScore - score);\n    if (score >= nextLevelScore) setLevel(level + 1);\n  }, [level, score]);\n  const restartGame = () => {\n    setMap(initialMap); //TODO: lose game\n    setlines(0);\n    setScore(0);\n    setLevel(1);\n    setGameOver(false);\n  };\n  const loseGame = () => {\n    setGameOver(true);\n  };\n  const drop = () => {\n    if (!player) {\n      setPlayer(getRandomPlayer());\n      return;\n    }\n    setPlayer(player => {\n      const newPos = getNewPlayerPos(\"down\");\n      if (player.pos === newPos) {\n        setMap(map => {\n          const mapWithPlayer = PrintPlayerInMap(player, map);\n          const mapCleared = checkMap(mapWithPlayer);\n          return mapCleared;\n        });\n        const newPlayer = getRandomPlayer(player);\n        if (!validatePosition(newPlayer.pos, newPlayer.bloco)) loseGame();\n        return newPlayer;\n      }\n      return _objectSpread(_objectSpread({}, player), {}, {\n        pos: newPos\n      });\n    });\n  };\n  const rotatePlayer = () => {\n    const clonedPlayer = JSON.parse(JSON.stringify(player));\n    let mtrx = clonedPlayer.bloco.bloco.map((_, index) => clonedPlayer.bloco.bloco.map(column => column[index]));\n    mtrx = mtrx.map(row => row.reverse());\n    if (validatePosition(player.pos, {\n      bloco: mtrx\n    })) setPlayer(_objectSpread(_objectSpread({}, player), {}, {\n      bloco: _objectSpread(_objectSpread({}, player.bloco), {}, {\n        bloco: mtrx\n      })\n    }));\n  };\n  const keyUp = _ref => {\n    let {\n      keyCode\n    } = _ref;\n    if (pause || gameOver) return;\n    const THRESHOLD = 80;\n    // Activate the interval again when user releases down arrow.\n    if (keyCode === 40) {\n      setDown(false);\n      if (Date.now() - tick <= THRESHOLD) drop();\n    }\n    if (keyCode === 32) setSpaceReleased(true);\n  };\n  const forwardDown = () => {\n    if (pause || gameOver) return;\n    setPlayer(player => {\n      const playerCopy = JSON.parse(JSON.stringify(player));\n      playerCopy.pos = [...hintPlayer.pos];\n      setMap(map => {\n        const mapWithPlayer = PrintPlayerInMap(playerCopy, map);\n        const mapCleared = checkMap(mapWithPlayer);\n        return mapCleared;\n      });\n      const newPlayer = getRandomPlayer(player);\n      if (!validatePosition(newPlayer.pos, newPlayer.bloco)) loseGame();\n      return newPlayer;\n    });\n  };\n  const keyDown = _ref2 => {\n    let {\n      keyCode\n    } = _ref2;\n    if (pause || gameOver) return;\n    switch (keyCode) {\n      case 37:\n        setPlayer(player => _objectSpread(_objectSpread({}, player), {}, {\n          pos: getNewPlayerPos(\"left\")\n        }));\n        break;\n      case 38:\n        rotatePlayer();\n        break;\n      case 39:\n        setPlayer(player => _objectSpread(_objectSpread({}, player), {}, {\n          pos: getNewPlayerPos(\"right\")\n        }));\n        break;\n      case 40:\n        setTick(Date.now());\n        setDown(true);\n        break;\n      case 32:\n        if (spaceReleased) {\n          setSpaceReleased(false);\n          forwardDown();\n        }\n        break;\n      default:\n        break;\n    }\n  };\n  const checkMap = React.useCallback(map => {\n    let rowsClear = [];\n    map.forEach((row, y) => {\n      let clear = true;\n      row.forEach((pixel, x) => {\n        if (pixel.fill === 0) clear = false;\n      });\n      if (clear) rowsClear.push(y);\n    });\n    if (rowsClear.length > 0) {\n      let newMap = map.slice();\n      rowsClear.forEach(y => {\n        for (let mapY = newMap.length - 1; mapY >= 0; mapY--) if (mapY <= y) if (mapY > 0) newMap[mapY] = newMap[mapY - 1];else newMap[mapY] = [...new Array(STAGE_WIDTH)].map(() => ({\n          fill: 0,\n          color: []\n        }));\n      });\n      setlines(quant => quant + rowsClear.length);\n      const bonusLevel = 100 * (level * level);\n      const bonusRows = 40 * (rowsClear.length * rowsClear.length - 1);\n      setScore(score => score + 300 * rowsClear.length + bonusRows + bonusLevel);\n      return newMap;\n    }\n    return map;\n  }, [level]);\n  const validatePosition = React.useCallback((pos, bloco) => {\n    for (let y = 0; y < bloco.bloco.length; y++) for (let x = 0; x < bloco.bloco[y].length; x++) if (bloco.bloco[y][x] === 1) {\n      let mapY = pos[0] + y;\n      let mapX = pos[1] + x;\n      if (mapY > STAGE_HEIGHT || mapX < 0 || mapX > STAGE_WIDTH || !map[mapY] || !map[mapY][mapX] || map[mapY][mapX].fill === 1) return false;\n    }\n    return true;\n  }, [map]);\n  const calculateHintPlayer = React.useCallback(player => {\n    const hintBloco = JSON.parse(JSON.stringify(player.bloco));\n    let hintPosition = [...player.pos];\n    while (validatePosition([hintPosition[0] + 1, hintPosition[1]], hintBloco)) hintPosition = [hintPosition[0] + 1, hintPosition[1]];\n    return {\n      pos: hintPosition,\n      bloco: hintBloco\n    };\n  }, [validatePosition]);\n  const getNewPlayerPos = React.useCallback(movement => {\n    let newPos;\n    if (!player) return;\n    if (movement === \"down\") newPos = [player.pos[0] + 1, player.pos[1]];\n    if (movement === \"left\") newPos = [player.pos[0], player.pos[1] - 1];\n    if (movement === \"right\") newPos = [player.pos[0], player.pos[1] + 1];\n    if (!validatePosition(newPos, player.bloco)) return player.pos;\n    return newPos;\n  }, [player, validatePosition]);\n  useInterval(() => {\n    drop();\n  }, pause || gameOver ? null : down ? 50 : 450 - (level - 1) * 20);\n  useEffect(() => {\n    if (!player) return;\n    setHintPlayer(calculateHintPlayer(player));\n  }, [player, calculateHintPlayer]);\n  const bind = useDrag(_ref3 => {\n    let {\n      down,\n      movement: [mx, my],\n      velocity\n    } = _ref3;\n    const THRESHOLD = 20;\n    const FORCE_THRESHOLD = 1;\n    if (down) {\n      if (Math.abs(mx - dragX) > THRESHOLD) {\n        if (mx - dragX > 0) setPlayer(player => _objectSpread(_objectSpread({}, player), {}, {\n          pos: getNewPlayerPos(\"right\")\n        }));else setPlayer(player => _objectSpread(_objectSpread({}, player), {}, {\n          pos: getNewPlayerPos(\"left\")\n        }));\n        setDragX(mx);\n      }\n      if (Math.abs(my - dragY) > THRESHOLD) {\n        if (velocity > FORCE_THRESHOLD) {\n          if (spaceReleased) {\n            setSpaceReleased(false);\n            forwardDown();\n          }\n        } else if (my - dragY > 0) drop();\n        setDragY(my);\n      }\n    } else {\n      setDragX(0);\n      setDragY(0);\n      setSpaceReleased(true);\n    }\n  }, {\n    filterTaps: true,\n    lockDirection: true\n  });\n  if (!player || !map || !hintPlayer) return /*#__PURE__*/React.createElement(Center, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(BarLoader, {\n    color: \"#C41212\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 5\n    }\n  }));\n  return /*#__PURE__*/React.createElement(Stage, Object.assign({\n    lose: gameOver,\n    restartClick: () => restartGame(),\n    map: map,\n    player: player,\n    hint: hintPlayer,\n    paused: pause,\n    status: {\n      lines,\n      score,\n      level\n    },\n    onBlur: () => setPause(true),\n    onFocus: () => setPause(false),\n    tabIndex: \"0\",\n    onKeyUp: keyUp,\n    onKeyDown: keyDown,\n    onClick: () => rotatePlayer()\n  }, bind(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 3\n    }\n  }));\n};\nexport default Game;","map":{"version":3,"names":["React","useState","useEffect","useDrag","BarLoader","Stage","useInterval","Center","PrintPlayerInMap","STAGE_HEIGHT","STAGE_WIDTH","initialMap","Array","map","fill","color","colors","I","bloco","O","T","J","L","S","Z","getRandomBloco","blocos","Math","floor","random","length","getRandomPlayer","player","next","JSON","parse","stringify","pos","Game","setMap","setPlayer","down","setDown","pause","setPause","tick","setTick","Date","now","hintPlayer","setHintPlayer","spaceReleased","setSpaceReleased","lines","setlines","score","setScore","level","setLevel","dragX","setDragX","dragY","setDragY","gameOver","setGameOver","levelBaseScore","nextLevel","nextLevelScore","console","log","restartGame","loseGame","drop","newPos","getNewPlayerPos","mapWithPlayer","mapCleared","checkMap","newPlayer","validatePosition","_objectSpread","rotatePlayer","clonedPlayer","mtrx","_","index","column","row","reverse","keyUp","_ref","keyCode","THRESHOLD","forwardDown","playerCopy","keyDown","_ref2","useCallback","rowsClear","forEach","y","clear","pixel","x","push","newMap","slice","mapY","quant","bonusLevel","bonusRows","mapX","calculateHintPlayer","hintBloco","hintPosition","movement","bind","_ref3","mx","my","velocity","FORCE_THRESHOLD","abs","filterTaps","lockDirection","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Object","assign","lose","restartClick","hint","paused","status","onBlur","onFocus","tabIndex","onKeyUp","onKeyDown","onClick"],"sources":["C:/Users/Win11 Pro/Desktop/NPM/Tetris-Game-Deployment-Automation/src/components/Game/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDrag } from \"react-use-gesture\";\r\nimport BarLoader from \"react-spinners/BarLoader\";\r\n\r\nimport Stage from \"../Stage\";\r\nimport { useInterval } from \"../../hooks/useInterval\";\r\nimport Center from \"../Center\";\r\n\r\nimport { PrintPlayerInMap } from \"../../utils/Utils\";\r\n\r\n//TODO: Alterar OnClick (rotatePlayer) para OnFastClick (criar hook)\r\n//TODO: Organização do componente \"Game\" (Separar codigo em hooks, outros components e funcoes)\r\n//TODO: Dar um tempo quando o bloco estiver no chão, mas o usuário mexendo\r\n\r\nconst STAGE_HEIGHT = 18;\r\nconst STAGE_WIDTH = 10;\r\n\r\nconst initialMap = [...new Array(STAGE_HEIGHT)].map(() =>\r\n\t[...new Array(STAGE_WIDTH)].map(() => ({ fill: 0, color: [] }))\r\n);\r\n\r\nconst colors = [\r\n\t\"#e54b4b\",\r\n\t\"#9a031e\",\r\n\t\"#fcdc4d\",\r\n\t\"#005397\",\r\n\t\"#0bbcd6\",\r\n\t\"#20ad65\",\r\n\t\"#f8ebee\"\r\n];\r\n\r\nconst I = {\r\n\tbloco: [\r\n\t\t[0, 0, 0, 0],\r\n\t\t[1, 1, 1, 1],\r\n\t\t[0, 0, 0, 0],\r\n\t\t[0, 0, 0, 0]\r\n\t]\r\n};\r\n\r\nconst O = {\r\n\tbloco: [\r\n\t\t[1, 1],\r\n\t\t[1, 1]\r\n\t]\r\n};\r\n\r\nconst T = {\r\n\tbloco: [\r\n\t\t[0, 0, 0],\r\n\t\t[1, 1, 1],\r\n\t\t[0, 1, 0]\r\n\t]\r\n};\r\n\r\nconst J = {\r\n\tbloco: [\r\n\t\t[0, 1, 0],\r\n\t\t[0, 1, 0],\r\n\t\t[1, 1, 0]\r\n\t]\r\n};\r\n\r\nconst L = {\r\n\tbloco: [\r\n\t\t[0, 1, 0],\r\n\t\t[0, 1, 0],\r\n\t\t[0, 1, 1]\r\n\t]\r\n};\r\n\r\nconst S = {\r\n\tbloco: [\r\n\t\t[0, 1, 1],\r\n\t\t[1, 1, 0],\r\n\t\t[0, 0, 0]\r\n\t]\r\n};\r\n\r\nconst Z = {\r\n\tbloco: [\r\n\t\t[1, 1, 0],\r\n\t\t[0, 1, 1],\r\n\t\t[0, 0, 0]\r\n\t]\r\n};\r\n\r\nconst getRandomBloco = () => {\r\n\tconst blocos = [I, O, T, J, L, S, Z];\r\n\tconst bloco = blocos[Math.floor(Math.random() * blocos.length)];\r\n\tbloco.color = colors[Math.floor(Math.random() * colors.length)];\r\n\treturn bloco;\r\n};\r\nconst getRandomPlayer = player => {\r\n\tlet bloco, next;\r\n\tif (player)\r\n\t\tif (player.next) {\r\n\t\t\tbloco = JSON.parse(JSON.stringify(player.next));\r\n\t\t\tnext = getRandomBloco();\r\n\t\t}\r\n\tif (!bloco) bloco = getRandomBloco();\r\n\tif (!next) next = getRandomBloco();\r\n\tconst pos = [0, Math.floor(STAGE_WIDTH / 2 - 2 / 2)];\r\n\treturn { pos, bloco, next };\r\n};\r\n\r\nconst Game = () => {\r\n\tconst [map, setMap] = useState(initialMap);\r\n\tconst [player, setPlayer] = useState();\r\n\tconst [down, setDown] = useState(false);\r\n\tconst [pause, setPause] = useState(false);\r\n\tconst [tick, setTick] = useState(Date.now());\r\n\tconst [hintPlayer, setHintPlayer] = useState();\r\n\tconst [spaceReleased, setSpaceReleased] = useState(true);\r\n\tconst [lines, setlines] = useState(0);\r\n\tconst [score, setScore] = useState(0);\r\n\tconst [level, setLevel] = useState(1);\r\n\tconst [dragX, setDragX] = useState(0);\r\n\tconst [dragY, setDragY] = useState(0);\r\n\tconst [gameOver, setGameOver] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst levelBaseScore = 1000;\r\n\t\tconst nextLevel = level + 1;\r\n\t\tconst nextLevelScore =\r\n\t\t\t(levelBaseScore * nextLevel * nextLevel * nextLevel) / 5;\r\n\t\tconsole.log(\"Current level: \", level);\r\n\t\tconsole.log(\"Score to next level:\", nextLevelScore);\r\n\t\tconsole.log(\"Remaining: \", nextLevelScore - score);\r\n\t\tif (score >= nextLevelScore) setLevel(level + 1);\r\n\t}, [level, score]);\r\n\r\n\tconst restartGame = () => {\r\n\t\tsetMap(initialMap); //TODO: lose game\r\n\t\tsetlines(0);\r\n\t\tsetScore(0);\r\n\t\tsetLevel(1);\r\n\t\tsetGameOver(false);\r\n\t}\r\n\r\n\tconst loseGame = () => {\r\n\t\tsetGameOver(true);\r\n\t};\r\n\r\n\tconst drop = () => {\r\n\t\tif (!player) {\r\n\t\t\tsetPlayer(getRandomPlayer());\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetPlayer(player => {\r\n\t\t\tconst newPos = getNewPlayerPos(\"down\");\r\n\t\t\tif (player.pos === newPos) {\r\n\t\t\t\tsetMap(map => {\r\n\t\t\t\t\tconst mapWithPlayer = PrintPlayerInMap(player, map);\r\n\t\t\t\t\tconst mapCleared = checkMap(mapWithPlayer);\r\n\t\t\t\t\treturn mapCleared;\r\n\t\t\t\t});\r\n\t\t\t\tconst newPlayer = getRandomPlayer(player);\r\n\t\t\t\tif (!validatePosition(newPlayer.pos, newPlayer.bloco)) loseGame();\r\n\t\t\t\treturn newPlayer;\r\n\t\t\t}\r\n\t\t\treturn { ...player, pos: newPos };\r\n\t\t});\r\n\t};\r\n\r\n\tconst rotatePlayer = () => {\r\n\t\tconst clonedPlayer = JSON.parse(JSON.stringify(player));\r\n\t\tlet mtrx = clonedPlayer.bloco.bloco.map((_, index) =>\r\n\t\t\tclonedPlayer.bloco.bloco.map(column => column[index])\r\n\t\t);\r\n\t\tmtrx = mtrx.map(row => row.reverse());\r\n\t\tif (validatePosition(player.pos, { bloco: mtrx }))\r\n\t\t\tsetPlayer({ ...player, bloco: { ...player.bloco, bloco: mtrx } });\r\n\t};\r\n\r\n\tconst keyUp = ({ keyCode }) => {\r\n\t\tif (pause || gameOver)\r\n\t\t\treturn;\r\n\t\tconst THRESHOLD = 80;\r\n\t\t// Activate the interval again when user releases down arrow.\r\n\t\tif (keyCode === 40) {\r\n\t\t\tsetDown(false);\r\n\t\t\tif (Date.now() - tick <= THRESHOLD) drop();\r\n\t\t}\r\n\t\tif (keyCode === 32) setSpaceReleased(true);\r\n\t};\r\n\r\n\tconst forwardDown = () => {\r\n\t\tif (pause || gameOver)\r\n\t\t\treturn;\r\n\t\tsetPlayer(player => {\r\n\t\t\tconst playerCopy = JSON.parse(JSON.stringify(player));\r\n\t\t\tplayerCopy.pos = [...hintPlayer.pos];\r\n\t\t\tsetMap(map => {\r\n\t\t\t\tconst mapWithPlayer = PrintPlayerInMap(playerCopy, map);\r\n\t\t\t\tconst mapCleared = checkMap(mapWithPlayer);\r\n\t\t\t\treturn mapCleared;\r\n\t\t\t});\r\n\t\t\tconst newPlayer = getRandomPlayer(player);\r\n\t\t\tif (!validatePosition(newPlayer.pos, newPlayer.bloco)) loseGame();\r\n\t\t\treturn newPlayer;\r\n\t\t});\r\n\t};\r\n\r\n\tconst keyDown = ({ keyCode }) => {\r\n\t\tif (pause || gameOver)\r\n\t\t\treturn;\r\n\t\tswitch (keyCode) {\r\n\t\t\tcase 37:\r\n\t\t\t\tsetPlayer(player => ({ ...player, pos: getNewPlayerPos(\"left\") }));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 38:\r\n\t\t\t\trotatePlayer();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 39:\r\n\t\t\t\tsetPlayer(player => ({ ...player, pos: getNewPlayerPos(\"right\") }));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 40:\r\n\t\t\t\tsetTick(Date.now());\r\n\t\t\t\tsetDown(true);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 32:\r\n\t\t\t\tif (spaceReleased) {\r\n\t\t\t\t\tsetSpaceReleased(false);\r\n\t\t\t\t\tforwardDown();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\r\n\tconst checkMap = React.useCallback(\r\n\t\tmap => {\r\n\t\t\tlet rowsClear = [];\r\n\t\t\tmap.forEach((row, y) => {\r\n\t\t\t\tlet clear = true;\r\n\t\t\t\trow.forEach((pixel, x) => {\r\n\t\t\t\t\tif (pixel.fill === 0) clear = false;\r\n\t\t\t\t});\r\n\t\t\t\tif (clear) rowsClear.push(y);\r\n\t\t\t});\r\n\t\t\tif (rowsClear.length > 0) {\r\n\t\t\t\tlet newMap = map.slice();\r\n\t\t\t\trowsClear.forEach(y => {\r\n\t\t\t\t\tfor (let mapY = newMap.length - 1; mapY >= 0; mapY--)\r\n\t\t\t\t\t\tif (mapY <= y)\r\n\t\t\t\t\t\t\tif (mapY > 0) newMap[mapY] = newMap[mapY - 1];\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tnewMap[mapY] = [...new Array(STAGE_WIDTH)].map(() => ({\r\n\t\t\t\t\t\t\t\t\tfill: 0,\r\n\t\t\t\t\t\t\t\t\tcolor: []\r\n\t\t\t\t\t\t\t\t}));\r\n\t\t\t\t});\r\n\t\t\t\tsetlines(quant => quant + rowsClear.length);\r\n\t\t\t\tconst bonusLevel = 100 * (level * level);\r\n\t\t\t\tconst bonusRows = 40 * (rowsClear.length * rowsClear.length - 1);\r\n\t\t\t\tsetScore(score => score + 300 * rowsClear.length + bonusRows + bonusLevel);\r\n\t\t\t\treturn newMap;\r\n\t\t\t}\r\n\t\t\treturn map;\r\n\t\t},\r\n\t\t[level]\r\n\t);\r\n\r\n\tconst validatePosition = React.useCallback(\r\n\t\t(pos, bloco) => {\r\n\t\t\tfor (let y = 0; y < bloco.bloco.length; y++)\r\n\t\t\t\tfor (let x = 0; x < bloco.bloco[y].length; x++)\r\n\t\t\t\t\tif (bloco.bloco[y][x] === 1) {\r\n\t\t\t\t\t\tlet mapY = pos[0] + y;\r\n\t\t\t\t\t\tlet mapX = pos[1] + x;\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\tmapY > STAGE_HEIGHT ||\r\n\t\t\t\t\t\t\tmapX < 0 ||\r\n\t\t\t\t\t\t\tmapX > STAGE_WIDTH ||\r\n\t\t\t\t\t\t\t!map[mapY] ||\r\n\t\t\t\t\t\t\t!map[mapY][mapX] ||\r\n\t\t\t\t\t\t\tmap[mapY][mapX].fill === 1\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t[map]\r\n\t);\r\n\r\n\tconst calculateHintPlayer = React.useCallback(\r\n\t\tplayer => {\r\n\t\t\tconst hintBloco = JSON.parse(JSON.stringify(player.bloco));\r\n\t\t\tlet hintPosition = [...player.pos];\r\n\t\t\twhile (validatePosition([hintPosition[0] + 1, hintPosition[1]], hintBloco))\r\n\t\t\t\thintPosition = [hintPosition[0] + 1, hintPosition[1]];\r\n\t\t\treturn { pos: hintPosition, bloco: hintBloco };\r\n\t\t},\r\n\t\t[validatePosition]\r\n\t);\r\n\r\n\tconst getNewPlayerPos = React.useCallback(\r\n\t\tmovement => {\r\n\t\t\tlet newPos;\r\n\t\t\tif (!player) return;\r\n\t\t\tif (movement === \"down\") newPos = [player.pos[0] + 1, player.pos[1]];\r\n\t\t\tif (movement === \"left\") newPos = [player.pos[0], player.pos[1] - 1];\r\n\t\t\tif (movement === \"right\") newPos = [player.pos[0], player.pos[1] + 1];\r\n\t\t\tif (!validatePosition(newPos, player.bloco)) return player.pos;\r\n\t\t\treturn newPos;\r\n\t\t},\r\n\t\t[player, validatePosition]\r\n\t);\r\n\r\n\tuseInterval(\r\n\t\t() => {\r\n\t\t\tdrop();\r\n\t\t},\r\n\t\t(pause || gameOver) ? null : down ? 50 : 450 - (level - 1) * 20\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!player) return;\r\n\t\tsetHintPlayer(calculateHintPlayer(player));\r\n\t}, [player, calculateHintPlayer]);\r\n\r\n\tconst bind = useDrag(\r\n\t\t({ down, movement: [mx, my], velocity }) => {\r\n\t\t\tconst THRESHOLD = 20;\r\n\t\t\tconst FORCE_THRESHOLD = 1;\r\n\t\t\tif (down) {\r\n\t\t\t\tif (Math.abs(mx - dragX) > THRESHOLD) {\r\n\t\t\t\t\tif (mx - dragX > 0)\r\n\t\t\t\t\t\tsetPlayer(player => ({ ...player, pos: getNewPlayerPos(\"right\") }));\r\n\t\t\t\t\telse setPlayer(player => ({ ...player, pos: getNewPlayerPos(\"left\") }));\r\n\t\t\t\t\tsetDragX(mx);\r\n\t\t\t\t}\r\n\t\t\t\tif (Math.abs(my - dragY) > THRESHOLD) {\r\n\t\t\t\t\tif (velocity > FORCE_THRESHOLD) {\r\n\t\t\t\t\t\tif (spaceReleased) {\r\n\t\t\t\t\t\t\tsetSpaceReleased(false);\r\n\t\t\t\t\t\t\tforwardDown();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (my - dragY > 0) drop();\r\n\t\t\t\t\tsetDragY(my);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tsetDragX(0);\r\n\t\t\t\tsetDragY(0);\r\n\t\t\t\tsetSpaceReleased(true);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{ filterTaps: true, lockDirection: true }\r\n\t);\r\n\r\n\tif (!player || !map || !hintPlayer)\r\n\t\treturn (\r\n\t\t\t<Center>\r\n\t\t\t\t<BarLoader color={\"#C41212\"} />\r\n\t\t\t</Center>\r\n\t\t);\r\n\treturn (\r\n\t\t<Stage\r\n\t\t\tlose={gameOver}\r\n\t\t\trestartClick={() => restartGame()}\r\n\t\t\tmap={map}\r\n\t\t\tplayer={player}\r\n\t\t\thint={hintPlayer}\r\n\t\t\tpaused={pause}\r\n\t\t\tstatus={{ lines, score, level }}\r\n\t\t\tonBlur={() => setPause(true)}\r\n\t\t\tonFocus={() => setPause(false)}\r\n\t\t\ttabIndex=\"0\"\r\n\t\t\tonKeyUp={keyUp}\r\n\t\t\tonKeyDown={keyDown}\r\n\t\t\tonClick={() => rotatePlayer()}\r\n\t\t\t{...bind()}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default Game;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}